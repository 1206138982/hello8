ARM GAS  /tmp/ccX3VNJW.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	RUNNING
  16              		.section	.bss.RUNNING,"aw",%nobits
  19              	RUNNING:
  20 0000 00       		.space	1
  21              		.section	.text.main,"ax",%progbits
  22              		.align	1
  23              		.global	main
  24              		.arch armv7-m
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu softvfp
  30              	main:
  31              	.LFB66:
  32              		.file 1 "Src/main.c"
   1:Src/main.c    **** #include "stm32f10x.h"
   2:Src/main.c    **** #include "AllHead.h"
   3:Src/main.c    **** #include "led.h"
   4:Src/main.c    **** #include "uart.h"
   5:Src/main.c    **** #include "delay.h"
   6:Src/main.c    **** #include "sys.h"
   7:Src/main.c    **** #include "lcd.h"
   8:Src/main.c    **** #include "ov7670.h"
   9:Src/main.c    **** #include "time.h"
  10:Src/main.c    **** #include "exti.h"
  11:Src/main.c    **** #include "grey.h"
  12:Src/main.c    **** #include "a4950.h"
  13:Src/main.c    **** 	
  14:Src/main.c    **** void JTAG_Set(u8 mode);
  15:Src/main.c    **** u8 RUNNING = 0;
  16:Src/main.c    **** 
  17:Src/main.c    **** int main(void)
  18:Src/main.c    **** {	 
  33              		.loc 1 18 1
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccX3VNJW.s 			page 2


  43              	.LCFI1:
  44              		.cfi_def_cfa_register 7
  19:Src/main.c    **** #if defined(REMOTE_TEST) && REMOTE_TEST
  20:Src/main.c    **** 	//user varible defination
  21:Src/main.c    **** #endif
  22:Src/main.c    **** 	uart1_init(115200);	 	//‰∏≤Âè£ÂàùÂßãÂåñ‰∏∫9600
  45              		.loc 1 22 2
  46 0004 4FF4E130 		mov	r0, #115200
  47 0008 FFF7FEFF 		bl	uart1_init
  23:Src/main.c    **** 	JTAG_Set(0x01);
  48              		.loc 1 23 2
  49 000c 0120     		movs	r0, #1
  50 000e FFF7FEFF 		bl	JTAG_Set
  24:Src/main.c    **** 	delay_init();	    	 //Âª∂Êó∂ÂáΩÊï∞ÂàùÂßãÂåñ	  
  51              		.loc 1 24 2
  52 0012 FFF7FEFF 		bl	delay_init
  25:Src/main.c    **** 	NVIC_Configuration(); 	 //ËÆæÁΩÆNVIC‰∏≠Êñ≠ÂàÜÁªÑ2:2‰ΩçÊä¢Âç†‰ºòÂÖàÁ∫ßÔºå2‰ΩçÂìçÂ∫î‰ºòÂÖàÁ∫ß
  53              		.loc 1 25 2
  54 0016 FFF7FEFF 		bl	NVIC_Configuration
  26:Src/main.c    ****  	LED_Init();			     //LEDÁ´ØÂè£ÂàùÂßãÂåñ		
  55              		.loc 1 26 3
  56 001a FFF7FEFF 		bl	LED_Init
  27:Src/main.c    **** #if defined(REMOTE_TEST) && REMOTE_TEST
  28:Src/main.c    **** 	uart1_init(115200);
  57              		.loc 1 28 2
  58 001e 4FF4E130 		mov	r0, #115200
  59 0022 FFF7FEFF 		bl	uart1_init
  29:Src/main.c    **** // user init functions
  30:Src/main.c    ****   pinMode(1, 1);
  60              		.loc 1 30 3
  61 0026 0121     		movs	r1, #1
  62 0028 0120     		movs	r0, #1
  63 002a FFF7FEFF 		bl	pinMode
  64              	.L2:
  65              	.LBB2:
  31:Src/main.c    **** 
  32:Src/main.c    **** #endif
  33:Src/main.c    **** #if defined(REMOTE_TEST) && REMOTE_TEST
  34:Src/main.c    **** 	while(1){
  35:Src/main.c    **** // user while functions
  36:Src/main.c    ****   digitalWrite(1,1);
  66              		.loc 1 36 3 discriminator 1
  67 002e 0121     		movs	r1, #1
  68 0030 0120     		movs	r0, #1
  69 0032 FFF7FEFF 		bl	digitalWrite
  37:Src/main.c    ****   delay_lms(1000);
  70              		.loc 1 37 3 discriminator 1
  71 0036 4FF47A70 		mov	r0, #1000
  72 003a FFF7FEFF 		bl	delay_lms
  38:Src/main.c    ****   digitalWrite(1,0);
  73              		.loc 1 38 3 discriminator 1
  74 003e 0021     		movs	r1, #0
  75 0040 0120     		movs	r0, #1
  76 0042 FFF7FEFF 		bl	digitalWrite
  39:Src/main.c    ****   delay_lms(2323);
  77              		.loc 1 39 3 discriminator 1
  78 0046 40F61310 		movw	r0, #2323
ARM GAS  /tmp/ccX3VNJW.s 			page 3


  79 004a FFF7FEFF 		bl	delay_lms
  80              	.LBE2:
  34:Src/main.c    **** // user while functions
  81              		.loc 1 34 10 discriminator 1
  82 004e EEE7     		b	.L2
  83              		.cfi_endproc
  84              	.LFE66:
  86              		.section	.text.JTAG_Set,"ax",%progbits
  87              		.align	1
  88              		.global	JTAG_Set
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu softvfp
  94              	JTAG_Set:
  95              	.LFB67:
  40:Src/main.c    **** 
  41:Src/main.c    **** 
  42:Src/main.c    **** 	}
  43:Src/main.c    **** #else
  44:Src/main.c    **** #if defined(BIKING) && BIKING
  45:Src/main.c    **** #if defined(START_TEST) && START_TEST
  46:Src/main.c    **** 	MotorA_start();
  47:Src/main.c    **** 	motorA_test();
  48:Src/main.c    **** #endif
  49:Src/main.c    **** #endif
  50:Src/main.c    **** 	LCD_Init(); 
  51:Src/main.c    **** 	if(lcddev.id==0X6804||lcddev.id==0X5310) 	//Âº∫Âà∂ËÆæÁΩÆÂ±èÂπïÂàÜËæ®Áéá‰∏∫320*240.‰ª•ÊîØÊåÅ3.5ÂØ∏Â
  52:Src/main.c    **** 	{
  53:Src/main.c    **** 		lcddev.width=240;
  54:Src/main.c    **** 		lcddev.height=320; 
  55:Src/main.c    **** 	}
  56:Src/main.c    **** 	// usmart_dev.init(72);	//ÂàùÂßãÂåñUSMART			    
  57:Src/main.c    ****  	POINT_COLOR=RED;//ËÆæÁΩÆÂ≠ó‰Ωì‰∏∫Á∫¢Ëâ≤ 
  58:Src/main.c    **** 	LCD_ShowString(60,50,200,16,16,"WarShip STM32");	
  59:Src/main.c    **** 	LCD_ShowString(60,70,200,16,16,"OV7670 TEST");	
  60:Src/main.c    **** 	LCD_ShowString(60,90,200,16,16,"hello world logial");
  61:Src/main.c    **** 	LCD_ShowString(60,110,200,16,16,"2021/7/30");  
  62:Src/main.c    ****   	LCD_ShowString(60,230,200,16,16,"OV7670 Init...");	  
  63:Src/main.c    **** 	while(OV7670_Init())//ÂàùÂßãÂåñOV7670
  64:Src/main.c    **** 	{
  65:Src/main.c    **** 		LCD_ShowString(60,230,200,16,16,"OV7670 Error!!");
  66:Src/main.c    **** 		delay_ms(200);
  67:Src/main.c    **** 	    LCD_Fill(60,230,239,246,WHITE);
  68:Src/main.c    **** 		delay_ms(200);
  69:Src/main.c    **** 	}
  70:Src/main.c    ****  	LCD_ShowString(60,230,200,16,16,"OV7670 Init OK");
  71:Src/main.c    **** 	delay_ms(500);	 	   	   
  72:Src/main.c    **** 	LCD_Clear(BLACK); 
  73:Src/main.c    **** 	
  74:Src/main.c    **** 	TIM6_Int_Init(10000,7199);			//10KhzËÆ°Êï∞È¢ëÁéá,1ÁßíÈíü‰∏≠Êñ≠									  
  75:Src/main.c    **** 	EXTI11_Init();		// PC12 for ov7670 VSYNC interput pin in exti.c
  76:Src/main.c    **** 	OV7670_Window_Set(10,174,240,320);	//ËÆæÁΩÆÁ™óÂè£	  
  77:Src/main.c    ****   	OV7670_CS=0;						 	 
  78:Src/main.c    ****  	while(1)
  79:Src/main.c    **** 	{	
  80:Src/main.c    **** 		cameraOperation();
ARM GAS  /tmp/ccX3VNJW.s 			page 4


  81:Src/main.c    **** 	}	   
  82:Src/main.c    **** #endif
  83:Src/main.c    **** }
  84:Src/main.c    **** 
  85:Src/main.c    **** /*ÈíàÂØπË∞ÉËØïÂíå‰ΩøÁî®ÂÜ≤Á™ÅÈóÆÈ¢ò*/
  86:Src/main.c    **** void JTAG_Set(u8 mode)
  87:Src/main.c    **** {
  96              		.loc 1 87 1
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 16
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              	.LCFI2:
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 7, -4
 105 0002 85B0     		sub	sp, sp, #20
 106              	.LCFI3:
 107              		.cfi_def_cfa_offset 24
 108 0004 00AF     		add	r7, sp, #0
 109              	.LCFI4:
 110              		.cfi_def_cfa_register 7
 111 0006 0346     		mov	r3, r0
 112 0008 FB71     		strb	r3, [r7, #7]
  88:Src/main.c    **** 	u32 temp;
  89:Src/main.c    **** 	temp = mode;
 113              		.loc 1 89 7
 114 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 115 000c FB60     		str	r3, [r7, #12]
  90:Src/main.c    **** 	temp <<= 25;
 116              		.loc 1 90 7
 117 000e FB68     		ldr	r3, [r7, #12]
 118 0010 5B06     		lsls	r3, r3, #25
 119 0012 FB60     		str	r3, [r7, #12]
  91:Src/main.c    **** 	RCC->APB2ENR |= 1<<0;
 120              		.loc 1 91 15
 121 0014 0B4B     		ldr	r3, .L4
 122 0016 9B69     		ldr	r3, [r3, #24]
 123 0018 0A4A     		ldr	r2, .L4
 124 001a 43F00103 		orr	r3, r3, #1
 125 001e 9361     		str	r3, [r2, #24]
  92:Src/main.c    **** 	AFIO->MAPR &= 0xF8FFFFFF;
 126              		.loc 1 92 13
 127 0020 094B     		ldr	r3, .L4+4
 128 0022 5B68     		ldr	r3, [r3, #4]
 129 0024 084A     		ldr	r2, .L4+4
 130 0026 23F0E063 		bic	r3, r3, #117440512
 131 002a 5360     		str	r3, [r2, #4]
  93:Src/main.c    **** 	AFIO->MAPR |= temp;
 132              		.loc 1 93 13
 133 002c 064B     		ldr	r3, .L4+4
 134 002e 5A68     		ldr	r2, [r3, #4]
 135 0030 0549     		ldr	r1, .L4+4
 136 0032 FB68     		ldr	r3, [r7, #12]
 137 0034 1343     		orrs	r3, r3, r2
 138 0036 4B60     		str	r3, [r1, #4]
  94:Src/main.c    **** }
ARM GAS  /tmp/ccX3VNJW.s 			page 5


 139              		.loc 1 94 1
 140 0038 00BF     		nop
 141 003a 1437     		adds	r7, r7, #20
 142              	.LCFI5:
 143              		.cfi_def_cfa_offset 4
 144 003c BD46     		mov	sp, r7
 145              	.LCFI6:
 146              		.cfi_def_cfa_register 13
 147              		@ sp needed
 148 003e 80BC     		pop	{r7}
 149              	.LCFI7:
 150              		.cfi_restore 7
 151              		.cfi_def_cfa_offset 0
 152 0040 7047     		bx	lr
 153              	.L5:
 154 0042 00BF     		.align	2
 155              	.L4:
 156 0044 00100240 		.word	1073876992
 157 0048 00000140 		.word	1073807360
 158              		.cfi_endproc
 159              	.LFE67:
 161              		.text
 162              	.Letext0:
 163              		.file 2 "/home/ubuntu/tools/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_defa
 164              		.file 3 "/home/ubuntu/tools/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h
 165              		.file 4 "Inc/stm32f10x.h"
ARM GAS  /tmp/ccX3VNJW.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccX3VNJW.s:19     .bss.RUNNING:0000000000000000 RUNNING
     /tmp/ccX3VNJW.s:20     .bss.RUNNING:0000000000000000 $d
     /tmp/ccX3VNJW.s:22     .text.main:0000000000000000 $t
     /tmp/ccX3VNJW.s:30     .text.main:0000000000000000 main
     /tmp/ccX3VNJW.s:94     .text.JTAG_Set:0000000000000000 JTAG_Set
     /tmp/ccX3VNJW.s:87     .text.JTAG_Set:0000000000000000 $t
     /tmp/ccX3VNJW.s:156    .text.JTAG_Set:0000000000000044 $d

UNDEFINED SYMBOLS
uart1_init
delay_init
NVIC_Configuration
LED_Init
pinMode
digitalWrite
delay_lms
