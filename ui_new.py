# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'firsthelloworld.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtSerialPort import QSerialPortInfo
import my_logging

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1160, 885)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        # self.textEdit.setGeometry(QtCore.QRect(0, 40, 1161, 841))
        # self.textEdit.setObjectName("textEdit")
        self.webview = QWebEngineView(self.centralwidget)
        self.webview.setObjectName("webview")
        self.webview.setGeometry(QtCore.QRect(0, 40, 1900, 950))
        # self.webview.setMinimumWidth(400)
        # self.webview.setMinimumWidth(600)
        # self.gridLayout.addWidget(self.webview, 0, 1, 2, 1)

        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(0, 10, 561, 30))
        self.widget.setObjectName("widget")

        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)

        # self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        # self.pushButton_2.setObjectName("pushButton_2")
        # self.horizontalLayout.addWidget(self.pushButton_2)

        self.widget1 = QtWidgets.QWidget(self.centralwidget)
        self.widget1.setGeometry(QtCore.QRect(690, 10, 321, 30))
        self.widget1.setObjectName("widget1")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget1)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")

        self.pushButton_3 = QtWidgets.QPushButton(self.widget1)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.button3Clicked)
        self.horizontalLayout_2.addWidget(self.pushButton_3)

        self.comboBox_2 = QtWidgets.QComboBox(self.widget1)
        self.comboBox_2.setObjectName("comboBox_2")
        # self.comboBox_2.addItem("")
        # self.comboBox_2.addItem("")
        # self.comboBox_2.currentIndexChanged.connect(self.selectionChange)
        self.comboBox_2.activated.connect(self.selectionChange)
        self.horizontalLayout_2.addWidget(self.comboBox_2)

        self.comboBox_3 = QtWidgets.QComboBox(self.widget1)
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("f103c8")
        self.comboBox_3.addItem("f103ze")
        # self.comboBox_2.currentIndexChanged.connect(self.selectionChange3)
        self.comboBox_3.activated.connect(self.selectionChange3)
        self.horizontalLayout_2.addWidget(self.comboBox_3)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1160, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        saveBoard('f103c8')

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "编译下载"))
        # self.pushButton_2.setText(_translate("MainWindow", "下载"))
        self.pushButton_3.setText(_translate("MainWindow", "刷新串口"))
        # self.comboBox_2.setItemText(0, _translate("MainWindow", "item1"))
        # self.comboBox_2.setItemText(1, _translate("MainWindow", "item2"))
        
    def button3Clicked(self):
        print('try to get the port information')
        my_logging.save_log('try to get the port information')
        new_name_list = []
        uart_port_num = QSerialPortInfo.availablePorts()
        for info in uart_port_num:
            uart_str_name = info.portName().split()
            new_name_list.append(uart_str_name[0])
        self.comboBox_2.clear()
        num = 0
        for i in new_name_list:
            # print(i)
            self.comboBox_2.addItem('')
            _translate = QtCore.QCoreApplication.translate
            self.comboBox_2.setItemText(num, _translate("MainWindow", i))
            num = num+1
        if num != 0:
            self.save_comMessage(self.comboBox_2.itemText(0)[3])

    def selectionChange(self,i):
        print('select port:%s,index:%d'%(self.comboBox_2.itemText(i),i))
        my_logging.save_log('select port:%s,index:%d'%(self.comboBox_2.itemText(i),i))
        self.save_comMessage(self.comboBox_2.itemText(i)[3])

    def save_comMessage(self,str):
        str2write = 'cd Flash_Loader_Demo\n.\\STMFlashLoader.exe -c --pn '+str[0]+' --br 115200 -Dtr --Lo -Rts --Hi -Dtr --Hi -i STM32F4_05_07_15_17_1024K -e --all -d --fn ..\\make103.hex -r --a 08000000'
        with open("download.bat","w") as f:
            f.write(str2write)  # 自带文件关闭功能，不需要再写f.close()
        print('update download.bat')
        my_logging.save_log('update download.bat')

    def selectionChange3(self,i):
        print('select board:%s,index:%d'%(self.comboBox_3.itemText(i),i))
        my_logging.save_log('select board:%s,index:%d'%(self.comboBox_3.itemText(i),i))
        saveBoard(self.comboBox_3.itemText(i))

def saveBoard(str):
    with open("board.txt","w") as f:
        f.write(str)  # 自带文件关闭功能，不需要再写f.close()
    print('update board.txt')
    my_logging.save_log('update board.txt')
